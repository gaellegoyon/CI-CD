name: Pizzeria Workflow

on:
  workflow_dispatch:
    inputs:
      nom_client:
        description: "Nom du client"
        required: true
      pizzas:
        description: |
          Liste des pizzas au format JSON. Attention aux points importants:
          - Utilisez des guillemets doubles
          - Entourez la liste avec []
          Exemple: ["margherita","reine","calzone"]
        required: true

jobs:
  reception-commande:
    runs-on: ubuntu-latest
    outputs:
      pizzas: ${{ steps.set-pizzas.outputs.pizzas }}
    steps:
      - name: Afficher le message d'accueil
        run: echo "Bienvenue, ${{ github.event.inputs.nom_client }} !"

      - name: Confirmer la commande
        run: |
          echo "Votre commande a été confirmée. Voici les détails :"
          echo "Nom du client : ${{ github.event.inputs.nom_client }}"
          echo "Liste des pizzas : ${{ github.event.inputs.pizzas }}"

      - name: Configurer les pizzas pour le job suivant
        id: set-pizzas
        run: echo "pizzas=${{ toJSON(github.event.inputs.pizzas) }}" >> $GITHUB_OUTPUT

  cuisine:
    needs: reception-commande
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pizza: ${{ fromJSON(fromJSON(needs.reception-commande.outputs.pizzas)) }}
        taille: [L, XL]
        include:
          - pizza: dessert
            taille: L
    steps:
      - name: Préparer la pizza
        run: echo "Préparation de la pizza ${{ matrix.pizza }} de taille ${{ matrix.taille }}"

  livraison:
    needs: [cuisine, reception-commande]
    runs-on: ubuntu-latest
    concurrency:
      group: livraison
      cancel-in-progress: true
    steps:
      - name: Préparer la livraison
        run: echo "Préparation de la livraison pour ${{ github.event.inputs.nom_client }}"

      - name: Afficher les pizzas à livrer
        run: |
          echo "Les pizzas à livrer sont: ${{ needs.reception-commande.outputs.pizzas }}"

  reclamation:
    needs: [livraison, reception-commande]
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Cloner le dépôt
        uses: actions/checkout@v4

      - name: Créer une issue pour réclamation
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue create --title "Réclamation pour ${{ github.event.inputs.nom_client }}" \
                         --body "Une réclamation a été signalée pour la commande : ${{ needs.reception-commande.outputs.pizzas }}"
